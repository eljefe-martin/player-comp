"use strict";

var app = angular.module("app", [ "app.controllers", "app.services", "ui.router" ]);

//states
app.config([ "$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
    $stateProvider.state("player", {
        url: "/player",
        views: {
            "": {
                templateUrl: "views/player.html",
                controller: "playerCtrl"
            },
            "log-comment": {
                templateUrl: "views/log-comment.html",
                controller: "commentCtrl"
            }
        }
    }).state("comment", {
        url: "/comment",
        views: {
            "": {
                templateUrl: "views/comment.html",
                controller: "commentCtrl"
            },
            "log-comment": {
                templateUrl: "views/log-comment.html",
                controller: "commentCtrl"
            }
        }
    }).state("login", {
        url: "/login",
        templateUrl: "views/login.html"
    });
    $urlRouterProvider.otherwise("login");
} ]).run([ "$rootScope", "$state", function($rootScope, $state) {
    $rootScope.$on("$stateChangeStart", function(event, next) {
        // redirect to login page if not logged in
        if (next.authenticate && !$rootScope.currentUser) {
            event.preventDefault();
            //prevent current page from loading
            $state.go("forbidden");
        }
    });
} ]);

"use strict";

var controllers = angular.module("app.controllers", []);

"use strict";

controllers.controller("commentCtrl", [ "$scope", "$http", "commentService", "playerService", "dateUtility", function($scope, $http, commentService, playerService, dateUtility) {
    //contoller function that maps to the service function                                      
    $scope.getCommentLog = function() {
        commentService.loadCommentLog($scope.playerId).success(function(res) {
            $scope.commentLog = res;
            commentService.setCommentLog($scope.commentLog);
        }).error(function(res) {
            console.log(res);
        });
    };
    var init = function() {
        //initialization function used to grab state when page reloads
        if (commentService.getPlayerId()) {
            $scope.playerId = commentService.getPlayerId();
            $scope.commentLog = commentService.getCommentLog();
        } else {
            $scope.playerId = playerService.getPlayerId();
            $scope.getCommentLog();
        }
    };
    //call init                                      
    init();
    $scope.myFunction = function() {
        alert(playerService.getPlayerId());
    };
    $scope.playerInfo = playerService.getPlayerInfo();
} ]);

"use strict";

controllers.controller("playerCtrl", [ "$scope", "$http", "playerService", "dateUtility", function($scope, $http, playerService, dateUtility) {
    var dt = new Date();
    dt.setDate(dt.getDate() - 1);
    //date dropdown options
    $scope.dateOptions = {
        availableOptions: [ {
            id: 7
        }, {
            id: 90
        }, {
            id: 180
        }, {
            id: 365
        } ]
    };
    var init = function() {
        //initialization function used to grab state when page reloads
        if (playerService.getPlayerId()) {
            $scope.playerId = playerService.getPlayerId();
            $scope.playerInfo = playerService.getPlayerInfo();
            $scope.startDate = playerService.getStartDate();
            $scope.endDate = playerService.getEndDate();
            $scope.dateOptions.selectedOption = {
                id: dateUtility.dayDiff($scope.startDate, $scope.endDate) + 1
            };
            console.log($scope.dateOptions.selectedOption.id);
        } else {
            $scope.dateOptions.selectedOption = {
                id: 180
            };
            $scope.playerId;
            $scope.playerInfo;
            $scope.startDate = dateUtility.addDays(dt, $scope.dateOptions.selectedOption.id - 1);
            $scope.endDate = dt;
        }
    };
    //call init                                      
    init();
    //contoller function that maps to the service function                                      
    $scope.getPlayerInfo = function() {
        $scope.updatePressed = true;
        playerService.loadPlayerInfo($scope.playerId, $scope.startDate, $scope.endDate).success(function(res) {
            //change back to this when using sql server
            //$scope.playerInfo = res[0][0];
            $scope.playerInfo = res[0];
            $scope.updatePressed = false;
            //show the comment tab
            $("#comment-log-tab").show();
            $("#comment-button").show();
            playerService.setPlayerInfo($scope.playerInfo);
        }).error(function(res) {
            console.log(res);
        });
    };
    //update date when users selects from the select box
    $scope.updateDates = function() {
        $scope.startDate = dateUtility.addDays(dt, -$scope.dateOptions.selectedOption.id + 1);
        $scope.endDate = dt;
    };
} ]);

"use strict";

var services = angular.module("app.services", []);

"use strict";

services.factory("commentService", [ "$http", function($http) {
    var obj = {};
    //private fields used to retain state
    var _playerId, _commentLog;
    obj.loadCommentLog = function(playerId) {
        _playerId = playerId;
        return $http.get("/api/comments/" + playerId);
    };
    //getters and setters
    obj.getPlayerId = function() {
        return _playerId;
    };
    obj.setCommentLog = function(value) {
        _commentLog = value;
    };
    obj.getCommentLog = function() {
        return _commentLog;
    };
    // return the factory object
    return obj;
} ]);

"use strict";

services.factory("dateUtility", [ function() {
    var obj = {};
    //function to add days to a given date
    obj.addDays = function(dt, numDays) {
        var _dt = new Date(dt);
        return new Date(_dt.setDate(_dt.getDate() + numDays));
    };
    //function to return the number of days between 2 dates
    obj.dayDiff = function(startDate, endDate) {
        return parseInt((endDate - startDate) / (24 * 3600 * 1e3));
    };
    return obj;
} ]);

"use strict";

services.factory("playerService", [ "$http", function($http) {
    var obj = {};
    //private fields used to retain state
    var _playerId, _playerInfo, _startDate, _endDate;
    obj.loadPlayerInfo = function(playerId, startDate, endDate) {
        _playerId = playerId;
        _startDate = startDate;
        _endDate = endDate;
        return $http.get("/api/player/" + playerId);
    };
    //getters for the private fields
    obj.getPlayerId = function() {
        return _playerId;
    };
    obj.setPlayerInfo = function(value) {
        _playerInfo = value;
    };
    obj.getPlayerInfo = function() {
        return _playerInfo;
    };
    obj.getStartDate = function() {
        return _startDate;
    };
    obj.getEndDate = function() {
        return _endDate;
    };
    // return the factory object
    return obj;
} ]);

"use strict";

services.factory("userSessionService", [ "$http", function($http) {
    return {
        userId: "",
        login: function(data) {
            $http.post("/login/", data).then(function(res) {});
        },
        authorizationLevel: 0
    };
} ]);