"use strict";

var app = angular.module("app", [ "app.controllers", "app.services", "app.directives", "ui.router" ]);

//states
app.config([ "$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
    $stateProvider.state("player", {
        url: "/player",
        views: {
            "": {
                templateUrl: "views/player.html",
                controller: "playerCtrl"
            },
            "post-comment": {
                templateUrl: "views/post-comment.html",
                controller: "postCommentCtrl"
            },
            "player-lookup@player": {
                parent: "player",
                templateUrl: "views/player-lookup.html",
                controller: "playerLookkupCtrl"
            }
        }
    }).state("comment", {
        url: "/comment",
        views: {
            "": {
                templateUrl: "views/comment.html",
                controller: "commentCtrl"
            },
            "post-comment": {
                templateUrl: "views/post-comment.html",
                controller: "postCommentCtrl"
            }
        }
    }).state("login", {
        url: "/login",
        templateUrl: "views/login.html",
        controller: "userSessionCtrl"
    });
    $urlRouterProvider.otherwise("login");
} ]).run([ "$rootScope", "$state", function($rootScope, $state) {
    $rootScope.$on("$stateChangeStart", function(event, toState) {
        // redirect to login page if not logged in
        if (toState.name !== "login" && !$rootScope.currentUser) {
            event.preventDefault();
            //prevent current page from loading
            $state.go("login");
        }
    });
} ]);

"use strict";

var controllers = angular.module("app.controllers", []);

"use strict";

controllers.controller("commentCtrl", [ "$scope", "$http", "commentService", "playerService", "dateUtility", function($scope, $http, commentService, playerService, dateUtility) {
    //contoller function that maps to the service function                                      
    $scope.getCommentLog = function() {
        commentService.loadCommentLog($scope.playerId).success(function(res) {
            $scope.commentLog = res;
            commentService.setCommentLog(res);
        }).error(function(res) {
            console.log(res);
        });
    };
    $scope.playerInfo = playerService.getPlayerInfo();
    $scope.playerId = playerService.getPlayerId();
    $scope.getCommentLog();
} ]);

"use strict";

controllers.controller("playerCtrl", [ "$scope", "$http", "playerService", "dateUtility", function($scope, $http, playerService, dateUtility) {
    var dt = new Date();
    dt.setDate(dt.getDate() - 1);
    //date dropdown options
    $scope.dateOptions = {
        availableOptions: [ {
            id: 7
        }, {
            id: 30
        }, {
            id: 90
        }, {
            id: 180
        }, {
            id: 365
        } ]
    };
    $scope.playerModel = {};
    var init = function() {
        //initialization function used to grab state when page reloads
        if (playerService.getPlayerId()) {
            $scope.playerModel.playerId = playerService.getPlayerId();
            $scope.playerModel.showPlayerData = true;
            $scope.playerModel.hasData = true;
            $scope.playerInfo = playerService.getPlayerInfo();
            $scope.startDate = playerService.getStartDate();
            $scope.endDate = playerService.getEndDate();
            $scope.dateOptions.selectedOption = {
                id: dateUtility.dayDiff($scope.startDate, $scope.endDate) + 1
            };
            console.log($scope.dateOptions.selectedOption.id);
        } else {
            $scope.dateOptions.selectedOption = {
                id: 90
            };
            $scope.playerInfo;
            $scope.playerModel.playerId = undefined;
            $scope.playerModel.showPlayerData = false;
            $scope.playerModel.hasData = true;
            $scope.startDate = dateUtility.addDays(dt, -$scope.dateOptions.selectedOption.id + 1);
            $scope.endDate = dt;
        }
    };
    //contoller function that maps to the service function                                      
    $scope.getPlayerInfo = function() {
        $scope.updatePressed = true;
        playerService.loadPlayerInfo($scope.playerModel.playerId, $scope.startDate, $scope.endDate).success(function(res) {
            //change back to this when using sql server
            //$scope.playerInfo = res[0][0];
            $scope.playerInfo = res[0];
            //if no data we display no data
            if (!$scope.playerInfo) {
                $scope.playerModel.hasData = false;
                $scope.playerModel.showPlayerData = false;
                $("#comment-log-tab").hide();
                $("#comment-button").hide();
            } else {
                //show the comment tab
                $scope.playerModel.hasData = true;
                $("#comment-log-tab").show();
                $("#comment-button").show();
                playerService.setPlayerInfo($scope.playerInfo);
                $scope.playerModel.showPlayerData = true;
            }
            //code to run with or without data
            $("#player-update-button").blur();
            $scope.updatePressed = false;
        }).error(function(res) {
            console.log(res);
        });
    };
    //update date when users selects from the select box
    $scope.updateDates = function() {
        $scope.startDate = dateUtility.addDays(dt, -$scope.dateOptions.selectedOption.id + 1);
        $scope.endDate = dt;
    };
    //call init                                      
    init();
} ]);

"use strict";

controllers.controller("playerLookkupCtrl", [ "$scope", "$http", "dateUtility", function($scope, $http, dateUtility) {
    $scope.playerLookupResults = false;
    $scope.selectedPlayerId;
    //FUNCTIONS                                 
    //get data from stored proc via api call    
    $scope.playerSearch = function() {
        if ($scope.firstName || $scope.lastName || $scope.birthdate) {
            var data = {
                firstName: $scope.firstName,
                lastName: $scope.lastName,
                birthdate: $scope.birthdate
            };
            $http.post("/api/player-lookup", data).success(function(res) {
                $scope.lookupResults = res;
                $scope.playerLookupResults = true;
            }).error(function(res) {
                console.log("There was an error during the player lookup http request");
                console.log(res);
            });
        } else {
            $("#firstName").focus();
        }
    };
    //update playerid in player form                                      
    $scope.updatePlayerId = function() {
        if ($scope.selectedPlayerId) {
            $scope.playerModel.playerId = $scope.selectedPlayerId;
            $scope.playerModel.showPlayerData = false;
            $scope.playerLookupResults = false;
            $scope.firstName = $scope.lastName = $scope.birthdate = undefined;
        }
    };
    $scope.formatTable = function() {
        //called from directive so we know table is fully loaded
        $("#playerLookupTable").DataTable();
        $("#playerLookupTable input:checkbox").change(function() {
            $scope.selectedPlayerId = $(this.parentNode).next().text();
        });
    };
} ]);

"use strict";

controllers.controller("postCommentCtrl", [ "$scope", "$rootScope", "$http", "commentService", "playerService", "dateUtility", function($scope, $rootScope, $http, commentService, playerService, dateUtility) {
    $scope.getCommentLog = function() {
        commentService.loadCommentLog($scope.playerId).success(function(res) {
            commentService.setCommentLog(res);
        }).error(function(res) {
            console.log(res);
        });
    };
    $scope.postComment = function() {
        //if commentData.playerId is undefined run init
        if (!$scope.commentData.playerId) {
            $scope.commentData.playerId = playerService.getPlayerId();
            $scope.commentData.playerInfo = playerService.getPlayerInfo();
        }
        commentService.postComment($scope.commentData).success(function(res) {
            //return the comment Id to the user
            alert("Comment ID: " + res.LookupID);
            $scope.commentData.comment = "";
        }).error(function(res) {
            alert("error post-comment");
        });
    };
    //                                      
    $scope.playerInfo = playerService.getPlayerInfo();
    //variable to hold commentData
    $scope.commentData = {
        playerId: playerService.getPlayerId(),
        userName: $rootScope.currentUser,
        playerInfo: $scope.playerInfo
    };
} ]);

"use strict";

controllers.controller("userSessionCtrl", [ "$scope", "$rootScope", "$state", "userSessionService", "playerService", function($scope, $rootScope, $state, userSessionService, playerService) {
    $scope.loginData = {};
    $("#logout-button, #player-tab, #comment-log-tab, #comment-button, #currentUser").hide();
    playerService.resetPlayerInfo();
    $rootScope.currentUser = undefined;
    $rootScope.accessLevel = undefined;
    $scope.login = function() {
        userSessionService.login($scope.loginData).success(function(res) {
            //verify access level and valid login
            if (res.changePassword == 0 && res.accessLevel != 0) {
                $rootScope.currentUser = res.userId;
                $rootScope.accessLevel = res.accessLevel;
                $state.go("player");
                $("#player-tab, #logout-button, #currentUser").show();
                $("#currentUser a").html('<span class="glyphicon glyphicon-user right-padding"></span>' + res.userId);
            } else {
                $scope.loginData.invalidLogin = true;
                $("#userID").focus();
            }
        }).error(function(res) {
            console.log("Login error");
            console.log(res);
        });
    };
} ]);

"use strict";

var directives = angular.module("app.directives", []);

"use strict";

directives.directive("repeatCompleteDir", [ function() {
    return function(scope, element, attrs) {
        if (scope.$last) {
            scope.$emit("repeatComplete");
        }
    };
} ]);

"use strict";

directives.directive("repeatCompleteListenerDir", [ function() {
    return function(scope, element, attrs) {
        scope.$on("repeatComplete", function() {
            scope.formatTable();
        });
    };
} ]);

"use strict";

var services = angular.module("app.services", []);

"use strict";

services.factory("commentService", [ "$http", function($http) {
    var obj = {};
    //private fields used to retain state
    var _playerId, _commentLog;
    obj.loadCommentLog = function(playerId) {
        _playerId = playerId;
        return $http.get("/api/comments/" + playerId);
    };
    obj.postComment = function(data) {
        return $http.post("/api/post-comment", data);
    };
    //getters and setters
    obj.getPlayerId = function() {
        return _playerId;
    };
    obj.setCommentLog = function(value) {
        _commentLog = value;
    };
    obj.getCommentLog = function() {
        return _commentLog;
    };
    // return the factory object
    return obj;
} ]);

"use strict";

services.factory("dateUtility", [ function() {
    var obj = {};
    //function to add days to a given date
    obj.addDays = function(dt, numDays) {
        var _dt = new Date(dt);
        return new Date(_dt.setDate(_dt.getDate() + numDays));
    };
    //function to return the number of days between 2 dates
    obj.dayDiff = function(startDate, endDate) {
        return parseInt((endDate - startDate) / (24 * 3600 * 1e3));
    };
    return obj;
} ]);

"use strict";

services.factory("playerService", [ "$http", function($http) {
    var obj = {};
    //private fields used to retain state
    var _playerId, _playerInfo, _startDate, _endDate;
    obj.loadPlayerInfo = function(playerId, startDate, endDate) {
        _playerId = playerId;
        _startDate = startDate;
        _endDate = endDate;
        var data = {
            playerId: _playerId,
            startDate: _startDate,
            endDate: _endDate
        };
        return $http.post("/api/player/", data);
    };
    //getters for the private fields
    obj.getPlayerId = function() {
        return _playerId;
    };
    obj.setPlayerInfo = function(value) {
        _playerInfo = value;
    };
    obj.getPlayerInfo = function() {
        return _playerInfo;
    };
    obj.getStartDate = function() {
        return _startDate;
    };
    obj.getEndDate = function() {
        return _endDate;
    };
    obj.resetPlayerInfo = function() {
        _playerId = undefined;
        _startDate = undefined;
        _playerInfo = undefined;
        _endDate = undefined;
    };
    // return the factory object
    return obj;
} ]);

"use strict";

services.factory("userSessionService", [ "$http", function($http) {
    var obj = {};
    //private fields
    var _userId, _accessLevel;
    //functions to expose
    obj.login = function(data) {
        return $http.post("/api/login", data);
    };
    obj.getUserId = function() {
        return _userId;
    };
    obj.setUserId = function(value) {
        _userId = value;
    };
    obj.getAccessLevel = function() {
        return _accessLevel;
    };
    obj.setAccessLevel = function(value) {
        _accessLevel = value;
    };
    //factory returns an object when it first gets called
    return obj;
} ]);